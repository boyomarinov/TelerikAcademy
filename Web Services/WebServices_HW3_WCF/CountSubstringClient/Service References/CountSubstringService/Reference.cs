//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CountSubstringClient.CountSubstringService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CountSubstringService.ICountSubstring")]
    public interface ICountSubstring {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountSubstring/CountOccurrences", ReplyAction="http://tempuri.org/ICountSubstring/CountOccurrencesResponse")]
        int CountOccurrences(string needle, string haystack);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountSubstring/CountOccurrences", ReplyAction="http://tempuri.org/ICountSubstring/CountOccurrencesResponse")]
        System.Threading.Tasks.Task<int> CountOccurrencesAsync(string needle, string haystack);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICountSubstringChannel : ICountSubstring, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CountSubstringClient : System.ServiceModel.ClientBase<ICountSubstring>, ICountSubstring {
        
        public CountSubstringClient() {
        }
        
        public CountSubstringClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CountSubstringClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CountSubstringClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CountSubstringClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CountOccurrences(string needle, string haystack) {
            return base.Channel.CountOccurrences(needle, haystack);
        }
        
        public System.Threading.Tasks.Task<int> CountOccurrencesAsync(string needle, string haystack) {
            return base.Channel.CountOccurrencesAsync(needle, haystack);
        }
    }
}
